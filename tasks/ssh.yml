---

- name: SSH | SSH configured for interactive user
  block:
    - name: SSH | User SSH directory exists
      ansible.builtin.file:
        path: "{{ interactive_account.home_dir }}/.ssh"
        owner: "{{ interactive_account.username }}"
        group: "{{ interactive_account.username }}"
        mode: "0700"
        state: directory

    - name: SSH | Interactive account key login authorized
      ansible.posix.authorized_key:
        user: "{{ interactive_account.username }}"
        key: "{{ item }}"
      when: interactive_account.pubkeys is defined
      loop: "{{ interactive_account.pubkeys }}"

    - name: SSH | Interactive account private keys deployed
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "{{ interactive_account.home_dir }}/.ssh/{{ item | basename }}"
        owner: "{{ interactive_account.username }}"
        group: "{{ interactive_account.username }}"
        mode: "0400"
      when: interactive_account.private_keys is defined
      loop: "{{ interactive_account.private_keys }}"
  when:
    - interactive_account is defined

- name: SSH | SSH configured for service account
  block:
    - name: SSH | Service account SSH directory exists
      ansible.builtin.file:
        path: "{{ service_account.home_dir }}/.ssh"
        owner: "{{ service_account.username }}"
        group: "{{ service_account.username }}"
        mode: "0700"
        state: directory

    - name: SSH | Service account key login authorized
      ansible.posix.authorized_key:
        user: "{{ service_account.username }}"
        key: "{{ item }}"
      loop: "{{ service_account.pubkeys }}"

# Ubuntu's SSH service is frustratingly called 'ssh' rather than 'sshd'.
- name: SSH | Determine SSH service name
  block:
    - name: SSH | Get Linux SSH service name
      shell: >
        systemctl list-units ssh* --type=service --no-pager --no-legend
        | awk -F . '/ssh(d*).service/ {gsub(/ /,"");print $1}'
      changed_when: false
      failed_when: false
      register: sshservice
      when: ansible_system == "Linux"

    - name: SSH | Set Linux SSH service name
      set_fact:
        ssh_service_name: "{{ sshservice.stdout }}"
      when: ansible_system == "Linux"

    - name: SSH | Set FreeBSD SSH service name
      set_fact:
        ssh_service_name: sshd
      when: ansible_system == "FreeBSD"

- name: SSH | SSHD enabled
  ansible.builtin.service:
    name: "{{ ssh_service_name }}"
    state: started
    enabled: true

- name: SSH | Root disallowed from SSH login
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: ^\s*PermitRootLogin yes\s*$
    line: "#PermitRootLogin yes"
  notify: restart-sshd
